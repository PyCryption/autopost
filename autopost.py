from telethon.sync import TelegramClient, events
import asyncio
import logging

api_id = 29725939
api_hash = '1562de0630b4e8734d746a0ed037963a'
mychan = -1001843145329
channels = [-1001422173447, -1001582794312, -1001474692357, -1001637808937, -1001689202235, -1001485321811, -1001583082275, -1001235272807, -1001481743976, -1001410755300, -1001348255490, -1001711197908, -1001766543888, -1001908862660, -1001511957114, -1001711197908, -1001902745157, -1001456762552, -1001645887804, -1001514736608, -1001560872857, -1001237848972, -1001776358085]

client = TelegramClient('negri', api_id, api_hash)
print("[+] activate")

def to_lower(word: str):
    return word.lower()

badtext_words = {'bam', '–î–æ—Å—Ç—É–ø', '–∫–∞–Ω–∞–ª', '–ë–ï–°–ü–õ–ê–¢–ù–´–ô', '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ', '–ó–∞–ª–∏–≤–∞—é—Ç', '–î–û–°–¢–£–ü', '–¥–æ—Å—Ç—É–ø', '–ø–æ–∏—Å–∫', '–ü–æ–∏—Å–∫', '–ñ–ú–ò', '–∂–º–∏', '—Å—Å—ã–ª–∫—É', '–°–º–æ—Ç—Ä–∏', '—Ç—É—Ç', '–°–ª–∏—Ç—ã–π', '–∞—Ä—Ö–∏–≤', '–ò—Å–∫–∞–ª–∏', '—Ñ—É–ª–ª?', '–∑–∞–ª–µ—Ç–∞–π', '–î–∞—é', '—Å—Å—ã–ª–∫—É', '–ü—Ä–æ–≤–µ—Ä—å', '–ø–æ–¥—Ä—É–≥—É', '–°–ª–∏–≤', '—à–∫—É—Ä', '–±–æ—Ç', 'Telegram', '–ò–ù–¢–ò–ú', '–ü–û–ò–°–ö', '–ü—Ä–∏–≤–∞—Ç–Ω—ã–π', '–∫–æ–Ω—Ç–µ–Ω—Ç', '–ü–æ–¥—Ä—É–≥–∞', '–î–µ—Ä–∂–∏', '—Å—Å—ã–ª–∫—É', '–ü–æ–¥–±–æ—Ä–∫–∏', '–§—É–ª–ª', '–∑–∞–∫—Ä–µ–ø–µ', '–ß–∞—Ç', '–î–æ—Å—Ç—É–ø', '–ø—Ä–∏–≤–∞—Ç–Ω—ã–π', '–∫–∞–Ω–∞–ª', '–í–ø–∏—Å–∫–∏', '–ü–∞—Ä–æ–ª—å', 'PormHub', '–ü–æ–ª–Ω–æ–µ', '–≤–∏–¥–µ–æ', '–ó–∞–π–¥–∏', '–°–º–æ—Ç—Ä–µ—Ç—å', '–¢—É—Ç', '—Å–ª–∏–≤–∞—é—Ç', '–ê—Ä—Ö–∏–≤', '–ú–µ—Å—Ç–∞', '–ù–∞—à–ª–∏', '—Å–µ–∫—Å–µ', '—Å–µ–∫—Å', '–æ–±—É–≤—å', '–ë–æ–ª—å—à–µ', '—Ç—É—Ç', '–ë–æ–ª—å—à–µ', '—Ç—É—Ç', '–≠–§–ò–†', '–°–µ–∫—Ä–µ—Ç–Ω—ã–µ', '–ù–∞—Ç–µ', '–°–±–æ—Ä–∫–∞', '–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π', '–∫–æ–Ω—á–∞–π', '—É–¥–∞–ª—é', '–ó–∞—Ä–∞–±–æ—Ç–∞–ª', '–°—Å—ã–ª–∫–∞', '–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ', '–ü–û–†–ù–û', '–ö–∞–Ω–∞–ª—ã', '–°—Å—ã–ª–∫–∏', '–ó–∞–ª–∏–ª–∏', '–û–ü', '–ö–∞–Ω–∞–ª–∞', '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ', '–ü–û–†–ù0', '–ê–∫—Ç–∏–≤–Ω—ã', '–°–°—ã–ª–∫–∞', '–Ω–∞–∏–≥—Ä—É', '–ß–∏—Ç–∞—Ç—å', '–¥–∞–ª–µ–µ', '–ß–∏—Ç–∞—Ç—å', '–õ—É—á—à–∏–µ', '–ø—Ä–æ–º–æ–∫–æ–¥', '–í–Ω–∏–º–∞–Ω–∏–µ', '–ù–æ–≤—ã–π', '–ü–µ—Ä–µ—Ö–æ–¥–∏', '#—Ä–µ–∫–ª–∞–º–∞', '—Å—Å—ã–ª–∫–µ', '–¥–ª—è', '–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è', '–ù–∞–¥–æ–µ–ª–æ', '–∫–∞–Ω–∞–ª–µ', '–Ω–∞—à–µ–º', '–º–µ–º—ã', '–¢–∞–∫–æ–µ', '—É–≤–∏–¥–∏—à—å', '–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', '–õ–∏–∂–µ—Ç', '—Ñ–æ—Ç–æ', '—Ñ–æ—Ç–∫–∏', '–±–æ–ª—å—à–µ', '–µ—â–µ', '–±–æ–ª—å—à–µ', '–ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏', '—Ü–µ–Ω–∞', '–¥–µ—à–µ–≤–æ', '–ø–æ–∫—É–ø–∞–π', '–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è', '—Ç–µ–ª–µ–≥—Ä–∞–º', '2023', '—Å—é–¥–∞', '—Å–µ—Å—Ç—Ä—É', '—Ä–∞–∑–¥–µ–Ω–µ—Ç', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å', '–ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π', '–≥–æ—Ä–æ–¥', '–≥–æ—Ä–æ–¥–µ', '–¥–æ–≤–æ–ª—å–Ω—ã—Ö', '–≥–æ—Ä–æ–¥–µ', '–¢—ã—Å—è—á–∏', '—É–∂–µ', '—Ç–≤–æ–µ–º', '—Ç—ã—Å—è—á–∏', '—Ç—ã—Å—è—á–∞', '–ø–µ—Ä–µ–ø–ª–∞—Ç–æ–π', '–æ—Ä–∏–≥–∏–Ω–∞–ª', '–¥–µ—à–µ–≤–ª–µ', '–¥—Ä—É–≥–∏—Ö', '–∫—Ä–æ—Å—Å–æ–≤–∫–∏', '—Å—Ç–∞–≤–∫–∏', '—Å–ø–æ—Ä—Ç', '–∫–∞–∑–∏–Ω–æ', '–ø–æ–ø—Ä–æ–±—É–π', '–Ω–∞—à–ª–∞', '–ø–æ–ª–Ω–æ–µ', '–æ–±–º–µ–Ω', '—Ñ—É–ª–ª—ã', '–¥–æ–º–∞—à–∫–∞', '—Å–Ω–æ—à—É', '–Ω–∞—Ö—É–π', '–æ—Å—Ç–∞–≤–ª—è—é', '–Ω–µ–π—Ä–æ–Ω–∫–∞', '–≥–æ–ª–µ–Ω—å–∫–∏–º–∏', '100%'}
logging.basicConfig(level=logging.INFO, filename='logs.txt', filemode='a')
logger = logging.getLogger()

@client.on(events.Album(chats=channels))
async def handler(event):
    message_text_lowered = event.raw_text.lower()
    found_word = next((word for word in badtext_words if word in message_text_lowered), None)

    if not found_word:
        try:
            await client.send_message(
                mychan,
                file=event.messages,
                message="üî• –®–∫–æ–ª—å–Ω—ã–π –ù–∞–¥–∑–æ—Ä üî•\n https://t.me/+698KX7nr1GVlOGYx \n‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–∫—É ‚ù§Ô∏è\n@GirlNadzor_bot"
            )
            logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: %s", str(e))

@client.on(events.NewMessage(chats=channels))
async def my_event_handler(event):
    message_text_lowered = event.raw_text.lower()
    found_word = next((word for word in badtext_words if word in message_text_lowered), None)

    if not found_word:
        try:
            if event.message.video and not event.grouped_id:
                await client.send_file(
                    mychan,
                    file=event.message,
                    caption="üî• –®–∫–æ–ª—å–Ω—ã–π –ù–∞–¥–∑–æ—Ä üî•\n https://t.me/+698KX7nr1GVlOGYx \n‚ù§Ô∏è –ö—É–ø–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–∫—É ‚ù§Ô∏è\n@GirlNadzor_bot"
                )
                logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: %s", str(e))

with client:
    client.run_until_disconnected()